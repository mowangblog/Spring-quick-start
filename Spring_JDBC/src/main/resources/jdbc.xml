<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--组件扫描-->
    <context:component-scan base-package="top.mowang">

    </context:component-scan>
    <!--引入外部文件-->
    <!--默认情况下，如果在指定的属性文件中找不到属性，它还会检查Java系统属性。可能会导致username变成电脑名-->
    <!--手动设置 <context:property-placeholder> 标签的 system-properties-mode 属性值为 NEVER 或者 FALLBACK 即可解决-->
    <context:property-placeholder location="jdbc.properties" system-properties-mode="NEVER"/>

    <!--连接池-->
    <bean id="druid" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="url" value="${url}"/>
    </bean>

    <!--jdbc连接对象-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="druid">
        </property>
    </bean>
</beans>